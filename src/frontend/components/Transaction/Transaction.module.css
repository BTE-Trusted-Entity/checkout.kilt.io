.container {
  box-sizing: border-box;
  width: 90%;
  max-width: calc(1200rem / 16);
  background: rgb(var(--color-primary-rgb) / 10%);
  border: 1px solid rgb(var(--color-primary-rgb) / 50%);
  padding: 2.5rem 3.125rem;
  margin-top: calc(-125rem / 16);
  display: flex;
  flex-direction: column;
}

@media screen and (max-width: 500px) {
  .container {
    padding: 1rem 0.75rem;
  }
}

.heading {
  margin: 0 0 0.5rem;
  font-size: 1rem;
}

.txStatus {
  composes: subText from '../Typography/Typography.module.css';
  padding-left: 2.75rem;
  margin: 0 0 2.25rem;
  background: no-repeat left top/auto;
}

@media screen and (max-width: 500px) {
  .txStatus {
    background-size: 1.5rem;
  }
}

.txPrepared {
  composes: txStatus;
  background-image: url('./pending.svg');
}

.txComplete {
  composes: txStatus;
  background-image: url('./ok.svg');
}

.addressContainer {
  display: flex;
  align-items: flex-end;
  gap: 0.75rem;
  margin-bottom: 1.75rem;
  width: 100%;
}

@media screen and (max-width: 500px) {
  .addressContainer {
    flex-direction: column;
    align-items: center;
  }
}

.address {
  display: flex;
  flex-direction: column;
  margin: 0;
  overflow: hidden;
  overflow-wrap: break-word;
  max-width: 100%;
}

.addressName {
  padding-left: 0.25rem;
}

.addressValue {
  composes: importantText from '../Typography/Typography.module.css';
  background: #3a0029;
  border: 1px solid var(--color-orange);
  padding: 0.25rem;
}

.termsLine {
  display: flex;
  align-items: center;
  align-self: center;
  box-sizing: border-box;
  width: calc(100% + 6.25rem);
  margin: 1.25rem 0 1.5rem;
  padding: 0.5rem 3.125rem;
  background: rgb(var(--color-primary-rgb) / 50%);
}

@media screen and (max-width: 500px) {
  .termsLine {
    width: calc(100% + 1.5rem);
    padding: 0.5rem 1.75rem;
  }
}

.termsLineEnabled {
  composes: termsLine;
  background: var(--color-orange);
}

.termsLabel {
  display: flex;
  position: relative;
}

.termsLabelText {
  margin: 0;
}

.accept {
  display: none;
}

.checkbox {
  width: 1.25rem;
  height: 1.25rem;
  vertical-align: middle;
  display: inline-block;
  border: 1px solid var(--color-white);
  border-radius: 2px;
  background: var(--color-primary);
  cursor: pointer;
  position: relative;
  margin-right: 0.5rem;
  flex-shrink: 0;
}

.checkbox::before {
  content: ' ';
  background: url('./arrow.svg') no-repeat center/contain;
  position: absolute;
  width: 0.75rem;
  height: 0.75rem;
  left: -1.25rem;
  top: 0.25rem;
}

.accept:checked + .checkbox::after {
  width: 1.25rem;
  height: 1.25rem;
  display: inline-block;
  position: absolute;
  left: 0;
  bottom: 0;
  content: ' ';
  background: url('./checkmark.svg') no-repeat center/contain;
}

.termsLink {
  color: var(--color-white);
}

.incomplete {
  width: 100%;
  display: flex;
  flex-direction: column;
}

.instruction {
  composes: importantText from '../Typography/Typography.module.css';
}

.cost {
  display: flex;
  flex-direction: column;
  margin: 1.25rem 0 1.5rem;
}

.costValue {
  font-size: 2.25rem;
}

.paypal {
  width: calc(250rem / 16);
  height: 2.25rem;
}

@media screen and (max-width: 500px) {
  .paypal {
    width: 100%;
    height: auto;
  }
}

.purchaseHeading {
  composes: regularText from '../Typography/Typography.module.css';
  margin: 1rem 0;
}

.purchaseDetails {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.purchaseDetail {
  display: flex;
  gap: 1rem;
}

.detailName {
  min-width: 8rem;
}

.detailValue {
  composes: importantText from '../Typography/Typography.module.css';
  display: flex;
  flex-direction: column;
  margin: 0;
}

.servicesHeading {
  composes: regularText from '../Typography/Typography.module.css';
  margin-top: 2.75rem;
}

.services {
  padding-left: 1.5rem;
}

.serviceLink {
  color: var(--color-white);
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}

.dialog::backdrop {
  background: rgb(68 0 49 / 30%);
  backdrop-filter: blur(3px);
}

.dialog {
  position: fixed;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  background: transparent;
  color: var(--color-white);
  border: none;
  width: 100%;
  margin: 0;
}

.dialog[open] {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1.5rem;
}

.dialog::before {
  content: '';
  width: calc(50rem / 16);
  height: calc(50rem / 16);
  background: url('spinner.svg') no-repeat center/contain;
  animation: rotation 1.5s infinite linear;
}
